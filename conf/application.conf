# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="changeme"
play.http.secret.key=${?PLAY_APP_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Play HTTP Filters
# ~~~~~
play.http.filters = "org.prayerping.filters.Filters"

# Registers the filters
# ~~~~~
play.filters.enabled += "play.filters.csp.CSPFilter"

# The application DI modules
# ~~~~~
play.modules.enabled += "org.prayerping.modules.RedisModule"
play.modules.enabled += "org.prayerping.modules.AppModule"
play.modules.enabled += "org.prayerping.modules.BaseModule"
play.modules.enabled += "org.prayerping.modules.JobModule"
play.modules.enabled += "org.prayerping.modules.SilhouetteModule"
play.modules.enabled += "org.prayerping.modules.WebSocketModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"

play.modules.disabled += "play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "play.silhouette.api.actions.UnsecuredErrorHandlerModule"


# The asset configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

apiPrefix = "api"

# Pekko config
pekko {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }

}

play.server.websocket.periodic-keep-alive-max-idle = 10 seconds
play.server.websocket.periodic-keep-alive-mode = "pong"

slick.dbs.default {
  profile = "slick.jdbc.PostgresProfile$"
  db.url = "jdbc:postgresql://localhost:5432/prayerping"
  db.url = ${?DB_URL}
  db.user = "postgres"
  db.user = ${?DB_USER}
  db.password = "postgres"
  db.password = ${?DB_PASSWORD}
}

play.evolutions.autoApply=true
play.evolutions.autocommit=false

redis {
  host = "localhost"
  host = ${?REDIS_HOST}
  port = 6379
  port = ${?REDIS_PORT}
}

# Play mailer
play.mailer {
  host = "localhost"
  port = 25
  mock = true
}

# Security Filter Configuration - Content Security Policy
play.filters.csp {
  directives {
    default-src = "'self'"
    img-src = "'self' data: *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com chart.googleapis.com *.fbsbx.com api.qrserver.com"
    style-src = "'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com"
    font-src = "'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com"
    script-src = "'self' cdnjs.cloudflare.com"
    connect-src = "'self' twitter.com *.xing.com"
  }
}

play.filters.csrf.bypassCorsTrustedOrigins = false
play.filters.csrf.cookie.name="PLAY_CSRF_TOKEN" // We store the CSRF token in a cookie instead of the session so that UI app can read it
play.filters.csrf.contentType.blackList=[ // We would also check AJAX requests from type application/json
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain",
  "application/json"
]

recaptcha.secretKey = ${?RECAPTCHA_SECRETKEY}

include "silhouette.conf"

include "prayerping.conf"